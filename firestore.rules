rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isDeliveryPartner() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'deliveryPartner';
    }

    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }
    
    match /sessions/{sessionId} {
      allow read, create: if request.auth != null;
      allow write: if isOwner(resource.data.userId);
    }

    match /chatThreads/{threadId}/{document=**} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chatThreads/$(threadId)).data.participantIds;
    }
    
    match /supportChats/{chatId}/{document=**} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/supportChats/$(chatId)).data.userId) || isDeliveryPartner();
    }
    
    match /orders/{orderId} {
      // CUSTOMER: Can create, and can read/update their own orders.
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isOwner(resource.data.userId);
      
      // DELIVERY PARTNER:
      // Can list their assigned orders, regardless of status.
      allow list: if isDeliveryPartner() && request.query.where.deliveryPartnerId == request.auth.uid;

      // Can read/update an order they are assigned to.
      allow read, update: if isDeliveryPartner() && resource.data.deliveryPartnerId == request.auth.uid;
      
      // Can accept an order (update it from unassigned to assigned to them).
      allow update: if isDeliveryPartner() 
                      && resource.data.deliveryPartnerId == null
                      && request.resource.data.deliveryPartnerId == request.auth.uid;
    }
    
    // Allow delivery partners to list new, unassigned orders.
    // This requires a composite index on (deliveryPartnerId, orderStatus).
    match /orders/{orderId} {
        allow list: if isDeliveryPartner() 
                     && request.query.where.deliveryPartnerId == null 
                     && request.query.where.orderStatus == "Placed";
    }
  }
}
