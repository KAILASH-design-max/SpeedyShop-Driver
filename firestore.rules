rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isDeliveryPartner(orderId) {
      return get(/databases/$(database)/documents/orders/$(orderId)).data.deliveryPartnerId == request.auth.uid;
    }
    
    function isBecomingOwner(orderId) {
        let after = get(/databases/$(database)/documents/orders/$(orderId));
        let before = resource;
        
        return before.data.deliveryPartnerId == null &&
               after.data.deliveryPartnerId == request.auth.uid;
    }

    // --- User Profile Rules ---
    match /users/{userId} {
      // Users can read and write to their own profile.
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // --- Session Tracking Rules ---
    match /sessions/{sessionId} {
        // Users can create their own sessions.
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
        // Users can update their own sessions (to add logout timestamp).
        allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // --- Chat Rules ---
    match /chatThreads/{threadId} {
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.participantIds;
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chatThreads/$(threadId)).data.participantIds;
      }
    }
    
    // --- Support Chat Rules ---
    match /supportChats/{sessionId} {
        allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
        match /messages/{messageId} {
            allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/supportChats/$(sessionId)).data.userId == request.auth.uid;
        }
    }

    // --- Order Rules ---
    match /orders/{orderId} {
      // A delivery partner can READ an order IF they are the assigned partner.
      allow read: if isAuthenticated() && isDeliveryPartner(orderId);
      
      // A delivery partner can UPDATE an order IF:
      // 1. They are accepting an unassigned order.
      // 2. They are already the owner and are updating the status (e.g., to picked-up, delivered).
      allow update: if isAuthenticated() && (isBecomingOwner(orderId) || isDeliveryPartner(orderId));

      // Listing orders is now controlled by the read rule. 
      // The client MUST query by deliveryPartnerId to get results.
      allow list: if isAuthenticated();
    }
  }
}
